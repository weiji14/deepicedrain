name: Test DeepIceDrain

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

jobs:
  test:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        python-version: [3.8]
        os: [ubuntu-20.04]
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout current git repository
        uses: actions/checkout@v2.2.0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          miniconda-version: py38_4.8.3
          activate-environment: deepicedrain
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          show-channel-urls: true
          auto-activate-base: false
          use-only-tar-bz2: true

      - name: Cache virtual environment
        uses: actions/cache@v2.0.0
        id: cache
        with:
          path: |
            /usr/share/miniconda3/envs/deepicedrain
          key: cache-venv-${{ github.ref }}-${{ hashFiles('**/environment.yml') }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/deepicedrain/*.py') }}
          restore-keys: |
            cache-venv-refs/heads/master-${{ hashFiles('**/environment.yml') }}-

      - name: Install conda dependencies
        run: conda env update -n deepicedrain -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install Poetry python dependencies
        run: poetry install --no-root
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install deepicedrain package
        run: poetry install

      - name: Display virtualenv and installed package information
        run: |
          conda info
          conda list
          poetry env info
          poetry show

      - name: Code Quality
        run: poetry run black . --check

      - name: Test with pytest
        run: poetry run pytest --verbose deepicedrain/
